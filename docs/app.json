[{"name":"app.R","content":"# Load specific datasets from ggplot2\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\n# Known datasets from ggplot2\r\nggplot2_datasets <- c(\"mpg\", \"diamonds\")\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Dynamic Dataset Viewer for ggplot2\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      selectInput(\"dataset\", \"Select Dataset:\", choices = ggplot2_datasets),\r\n      selectInput(\"columns\", \"Select Columns:\", choices = NULL, multiple = TRUE),\r\n      numericInput(\"rows\", \"Number of Rows to Show:\", value = 10, min = 1),\r\n      downloadButton(\"downloadRCode\", \"Download R Code\")\r\n    ),\r\n    mainPanel(\r\n      h2(\"Data Viewer\"),  # Header for Data Viewer\r\n      tableOutput(\"data\"),\r\n      h2(\"R Code\"),  # Header for R Code\r\n      verbatimTextOutput(\"rcode\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  observe({\r\n    selected_dataset_name <- input$dataset\r\n    if (selected_dataset_name != \"\") {\r\n      tryCatch({\r\n        # Directly use the dataset name as a symbol to get the dataset\r\n        selected_dataset <- get(selected_dataset_name, envir = asNamespace('ggplot2'))\r\n        \r\n        if(is.data.frame(selected_dataset)) {\r\n          updateSelectInput(session, \"columns\", choices = names(selected_dataset), selected = character(0))\r\n          updateNumericInput(session, \"rows\", max = nrow(selected_dataset))\r\n        } else {\r\n          print(paste(selected_dataset_name, \"is not a dataframe.\"))\r\n        }\r\n      }, error = function(e) {\r\n        print(paste(\"Error loading dataset:\", selected_dataset_name, \"; Error:\", e$message))\r\n      })\r\n    } else {\r\n      updateSelectInput(session, \"columns\", choices = NULL, selected = character(0))\r\n    }\r\n  })\r\n  \r\n  # Subset the data based on selected columns and row count\r\n  filtered_data <- reactive({\r\n    req(input$dataset, input$columns)\r\n    selected_dataset <- get(input$dataset, 'package:ggplot2')\r\n    selected_columns <- input$columns\r\n    dataset_subset <- selected_dataset[, selected_columns, drop = FALSE]\r\n    head(dataset_subset, as.numeric(input$rows))\r\n  })\r\n  \r\n  # Render the filtered data\r\n  output$data <- renderTable({\r\n    filtered_data()\r\n  })\r\n  \r\n  # Create R code to reproduce the operation\r\n  output$rcode <- renderText({\r\n    req(input$dataset, input$columns, input$rows)\r\n    selected_columns <- paste0(\"'\", input$columns, \"'\")\r\n    r_code <- paste(input$dataset, \"_subset <-\", input$dataset, \"[, c(\", paste(selected_columns, collapse = \", \"), \"), drop = FALSE]\",\r\n                    \"\\nhead(\", input$dataset, \"_subset, \", input$rows, \")\")\r\n    return(r_code)\r\n  })\r\n  \r\n  # Download R code\r\n  output$downloadRCode <- downloadHandler(\r\n    filename = function() {\r\n      paste(input$dataset, \"_subset_code_\", Sys.Date(), \".R\", sep = \"\")\r\n    },\r\n    content = function(file) {\r\n      writeLines(output$rcode(), con = file)\r\n    }\r\n  )\r\n}\r\n\r\n# Run the Shiny app\r\nshinyApp(ui, server)\r\n","type":"text"}]
